{
  "Start_state": "START",
  "Final_states": ["START", "IDENTIFIER", "COLON", "SEMICOLON", "NUMBER", "DOT", "COMMA", "LT/LEQ/NEQ", "GT", "EQ", "ARITHMETIC_OP", "NEGATIVE", "SUBSTRACT", "MULTIPLY", "LPAREN", "RPAREN", "LBRACK", "RBRACK", "COMMENT_START", "COMMENT_END", "LEQ", "NEQ", "GEQ", "ASSIGNMENT_OP", "NUMBER_DOT", "NUMBER_FLOAT", "S_NUMBER", "RANGE_OPERATOR", "CHAR_LITERAL", "SUB_CHAR", "STRING_LITERAL"],
  "Transitions": [
    ["START", "A..Z,a..z,_", "IDENTIFIER"],
    ["START", ":", "COLON"],
    ["START", ";", "SEMICOLON"],
    ["START", "0..9", "NUMBER"],
    ["START", ".", "DOT"],
    ["START", ",", "COMMA"],
    ["START", "'", "APOSTROPHE"],
    ["START", "<", "LT/LEQ/NEQ"],
    ["START", ">", "GT"],
    ["START", "=", "EQ"],
    ["START", "+,/", "ARITHMETIC_OP"],
    ["START", "-", "NEGATIVE"],
    ["START", "*", "MULTIPLY"],
    ["START", "(", "LPAREN"],
    ["START", ")", "RPAREN"],
    ["START", "[", "LBRACK"],
    ["START", "]", "RBRACK"],
    ["START", "{", "COMMENT_START"],
    ["START", "}", "COMMENT_END"],
    ["LPAREN", "*", "COMMENT_START"],
    ["MULTIPLY", ")", "COMMENT_END"],
    ["NEGATIVE", "0..9", "NUMBER"],
    ["LT/LEQ/NEQ", "=,>", "LT/LEQ/NEQ"],
    ["GT", "=", "GEQ"],
    ["COLON", "=", "ASSIGNMENT_OP"],
    ["IDENTIFIER", "A..Z,a..z,0..9,_", "IDENTIFIER"],
    ["NUMBER", "0..9", "NUMBER"],
    ["NUMBER", ".", "NUMBER_DOT"],
    ["NUMBER_DOT", "0..9", "NUMBER_FLOAT"],
    ["NUMBER_FLOAT", "0..9", "NUMBER_FLOAT"],
    ["NUMBER", "e,E", "NOTATION"],
    ["NUMBER_FLOAT", "e,E", "NOTATION"],
    ["NOTATION", "+,-", "NOTATION_OP"],
    ["NOTATION", "0..9", "S_NUMBER"],
    ["NOTATION_OP", "0..9", "S_NUMBER"],
    ["S_NUMBER", "0..9", "S_NUMBER"],
    ["NUMBER_DOT", "-", "SUBSTRACT"],
    ["NUMBER", "-", "SUBSTRACT"],
    ["NUMBER_FLOAT", "-", "SUBSTRACT"],
    ["S_NUMBER", "-", "SUBSTRACT"],
    ["NUMBER_DOT", " ", "SPACE_NUM"],
    ["NUMBER", " ", "SPACE_NUM"],
    ["NUMBER_FLOAT", " ", "SPACE_NUM"],
    ["S_NUMBER", " ", "SPACE_NUM"],
    ["SPACE_NUM", "-", "SUBSTRACT"],
    ["SPACE_NUM", " ", "SPACE_NUM"],
    ["DOT", ".", "RANGE_OPERATOR"],
    ["APOSTROPHE", "ALL_EXCEPT '", "CHAR_BUILD"],
    ["CHAR_BUILD", "ALL_EXCEPT '", "CHAR_BUILD"],
    ["CHAR_BUILD", "'", "CHAR_LITERAL"],
    ["CHAR_LITERAL", "'", "SUB_CHAR"],
    ["SUB_CHAR", "ALL_EXCEPT '", "STRING_BUILD"],
    ["STRING_BUILD", "ALL_EXCEPT '", "STRING_BUILD"],
    ["STRING_BUILD", "'", "STRING_LITERAL"],
    ["STRING_LITERAL", "'", "SUB_STRING"],
    ["SUB_STRING", "ALL_EXCEPT '", "STRING_BUILD"]
  ],
  "Token_mapping": {
    "IDENTIFIER": "IDENTIFIER",
    "ARITHMETIC_OP": "ARITHMETIC_OPERATOR",
    "NEGATIVE": "ARITHMETIC_OPERATOR",
    "MULTIPLY": "ARITHMETIC_OPERATOR",
    "LEQ": "RELATIONAL_OPERATOR",
    "NEQ": "RELATIONAL_OPERATOR",
    "GEQ": "RELATIONAL_OPERATOR",
    "LT/LEQ/NEQ": "RELATIONAL_OPERATOR",
    "GT": "RELATIONAL_OPERATOR",
    "EQ": "RELATIONAL_OPERATOR",
    "ASSIGNMENT_OP": "ASSIGN_OPERATOR",
    "RANGE_OPERATOR": "RANGE_OPERATOR",
    "NUMBER": "NUMBER",
    "NUMBER_DOT": "NUMBER",
    "NUMBER_FLOAT": "NUMBER",
    "NOTATION": "NUMBER",
    "NOTATION_OP": "NUMBER",
    "S_NUMBER": "NUMBER",
    "CHAR_LITERAL": "CHAR_LITERAL",
    "STRING_LITERAL": "STRING_LITERAL",
    "SEMICOLON": "SEMICOLON",
    "COMMA": "COMMA",
    "COLON": "COLON",
    "DOT": "DOT",
    "LPAREN": "LPARENTHESIS",
    "RPAREN": "RPARENTHESIS",
    "LBRACK": "LBRACKET",
    "RBRACK": "RBRACKET",
    "COMMENT_START": "COMMENT_START",
    "COMMENT_END": "COMMENT_END"
  },
  "Error_states": {
    "STRING_BUILD": "String not closed",
    "SUB_STRING": "String not closed",
    "CHAR_BUILD": "Character not closed",
    "NOTATION": "Invalid scientific notation",
    "NOTATION_OP": "Invalid scientific notation"
  }
}
